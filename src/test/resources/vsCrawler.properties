#爬虫的默认配置,他会被vsCrawler.properties里面的配置项merge,作为真正生效的配置数据传递到各个组件

#最大空闲时间,默认25分钟
sessionPool.maxIdle=25 * 60 * 1000


#至少空转时间,默认10s,也就是一个session被回收后,至少10s后才能再次被使用
sessionPool.minIdl=10 * 1000

#最多连续使用时间,默认一个小时,也就是说,一个session一直被使用,一个小时之后,销毁这个用户,将user登录注销
sessionPool.maxDuration=60 * 60 * 1000

#一个用户最大并发数,默认一个session只能被一个session使用,这样每个用户都是串行的,单线程的抓取数据,不会存在状态紊乱,适合查询提交和结果获取在多次维护了状态的请求的场景
sessionPool.maxOccurs=10

#活跃session数目,如果你又n个账户,此配置数据为m,如果m<n,那么保持m个账户登录,如果n<m,那么保持n个用户处于登录状态,有用户登录的session在vscrawler中被作为一种资源来管理
sessionPool.activeUser=65535


#sessionPool在异步准备session的时候,需要单独的线程来执行登录,session检查等操纵,由于涉及网络,将会非常耗时,所以需要配置sessionPool里面的线程数目(正在设计动态线程池)
sessionPool.monitorThreadNumber=2


#爬虫线程数目,默认10个线程
vsCrawler.threadNumber=1


#工作目录,将会存在一些爬虫中间数据
vsCrawler.Working.directory=classpath:work

#初始种子文件
vsCrawler.initSeedFile=


#预计
seedManager.expectedSeedNumber=1000000